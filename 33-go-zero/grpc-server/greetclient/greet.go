/*
 * @Author: WinstonRD
 * @Date: 2025-07-15 19:44:12
 * @LastEditors: WinstonRD && winstonz919@sina.com
 * @LastEditTime: 2025-07-15 19:49:02
 * @FilePath: /33-go-zero/grpc-server/greetclient/greet.go
 * @Description:
 *
 * Copyright (c) 2025 by WinstonRD, All Rights Reserved.
 */
// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: greet.proto

package greetclient

import (
	"context"

	"grpc-server/greet"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = greet.Request
	Response = greet.Response

	Greet interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultGreet struct {
		cli zrpc.Client
	}
)

func NewGreet(cli zrpc.Client) Greet {
	return &defaultGreet{
		cli: cli,
	}
}

func (m *defaultGreet) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := greet.NewGreetClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
